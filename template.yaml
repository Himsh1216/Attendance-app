AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Attendance API (sessions, enroll, check-in) with Rekognition

Parameters:
  BucketName:
    Type: String
  RekognitionCollectionId:
    Type: String
    Default: students-collection

Globals:
  Function:
    Runtime: python3.11
    Timeout: 15
    MemorySize: 512
    Environment:
      Variables:
        S3_BUCKET: !Ref BucketName
        COLLECTION_ID: !Ref RekognitionCollectionId
        TABLE_SESSIONS: Sessions
        TABLE_ATTENDANCE: Attendance
    Policies:
      - S3CrudPolicy:
          BucketName: !Ref BucketName
      - DynamoDBCrudPolicy:
          TableName: Sessions
      - DynamoDBCrudPolicy:
          TableName: Attendance
      - Statement:
          Effect: Allow
          Action:
            - rekognition:CompareFaces
            - rekognition:SearchFacesByImage
            - rekognition:IndexFaces
            - rekognition:CreateCollection
            - rekognition:DescribeCollection
            - rekognition:ListCollections
          Resource: "*"

Resources:
  SessionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Sessions
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: classId
          AttributeType: S
      KeySchema:
        - AttributeName: classId
          KeyType: HASH

  AttendanceTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Attendance
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: sessionId
          AttributeType: S
        - AttributeName: studentId
          AttributeType: S
      KeySchema:
        - AttributeName: sessionId
          KeyType: HASH
        - AttributeName: studentId
          KeyType: RANGE

  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

  SessionFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handler.session_handler
      CodeUri: lambdas/
      Events:
        Start:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /session/start
            Method: POST
        Current:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /session/current
            Method: GET

  EnrollFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handler.enroll_handler
      CodeUri: lambdas/
      Events:
        Enroll:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /enroll
            Method: POST

  CheckinFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handler.checkin_handler
      CodeUri: lambdas/
      Events:
        Checkin:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /attendance/checkin
            Method: POST
